@model HackathonApp.Models.RegisterViewModel

@{
    ViewBag.Title = "Register";
}

<div class="section5">
    <div class="col-md-4 py-5 mx-auto">
    <div class="contianer">
    <div class="card shadow-lg border-0">
        <div class="card-body">
                @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                    <h4 class="text-center py-5">Register</h4>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <p>@ViewBag.Message</p>
                    <div class="form-floating mb-3">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-floating mb-3">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-floating mb-3">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-floating mb-3">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-floating mb-3">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-floating mb-3">
                        @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-floating mb-3">
                        @Html.LabelFor(model => model.Bdate, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Bdate, "{0:yyyy-MM-dd}", new { @class = "form-control input-sm datepicker", @type = "date", placeholder = "Date of Birth", max = DateTime.Today.ToString("yyyy-MM-dd") })
                            @Html.ValidationMessageFor(model => model.Bdate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-floating mb-3">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-floating mb-lg-auto mx-auto">
                        <div class="col-md-offset-5 col-md-10">
                            <input type="submit" value="Create" class="btn btn-primary" />
                        </div>
                    </div>
              }
            <div class="py-3">
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
</div>
</div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
